#!/bin/bash -e
export PACKAGE=_PACKAGE_
export USER=$PACKAGE
export MODULENAME=_MODULENAME_
export JAVA_HOME="/usr/lib/jvm/j2sdk1.8-oracle"
STATUSFILE=appstatus.html

JMX_PORT=_JMX_PORT_
HEALTH_CHECK_PORT=_HEALTH_PORT_
DEBUG_PORT=_DEBUG_PORT_
DEFAULT=/etc/default/$PACKAGE
if [ -f "$DEFAULT" ]; then
    . "$DEFAULT"
fi


GC_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=30 -XX:+PrintAdaptiveSizePolicy -verbose:gc -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:/var/log/flipkart/ingestor/$MODULENAME/gc.log -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:+DisableExplicitGC";
REMOTE_OPTS="-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=$DEBUG_PORT,suspend=n";
JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=$JMX_PORT";

export PACKAGE_PID="/var/run/$PACKAGE/$PACKAGE.pid"
export DROPWIZARD_JAR="/var/lib/$PACKAGE/$MODULENAME.jar";
export DROPWIZARD_CONFIG="/etc/$PACKAGE/config/$MODULENAME-config.yml";

function start()
{
    exec setuidgid $USER /usr/lib/jvm/java-8-oracle/bin/java -jar -Denv="$ENV" $GC_OPTS $JMX_OPTS $REMOTE_OPTS $DROPWIZARD_JAR server $DROPWIZARD_CONFIG > /dev/null 2>&1 &
    echo $! > $PACKAGE_PID
    echo "$MODULENAME is up!" > /var/lib/$PACKAGE/$STATUSFILE
}

function stop()
{
    echo "$PACKAGE Landing, Coming to Halt, Shutting off the engines!!!!"
    if [ -f /var/lib/$PACKAGE/$STATUSFILE ]; then
        mv /var/lib/$PACKAGE/$STATUSFILE /var/lib/$PACKAGE/old-$STATUSFILE
    fi
    PID=$(cat $PACKAGE_PID)
    kill $PID
    sleep 10
}

function health_check()
{
       curl -w %{http_code} -s -o /dev/null "http://localhost:$HEALTH_CHECK_PORT/ping"
}

function service_status()
{
       if [ -f $PID_FILE ]; then
               status=$(health_check)
               if [ $status -eq 200 ]; then
                       echo "up"
               else
                       echo "down"
               fi
       else
               echo "down"
       fi
}


case "$1" in
    start)
        status=$(service_status)
        if [ "$status" == "up" ]; then
            echo "Service is already running"
        else
            if [ "$#" = 2 ]; then
                start $2
            else
                start "y"
            fi
        fi
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
        ;;

    status)
        status=$(service_status)
        if [ "$status" == "up" ]; then
            echo "Service is UP"
            exit 0
        else
            echo "Service is DOWN"
            exit 2
        fi
        ;;    
    
    kill)
        provided_pid=$2
        service_pid=$(cat $PACKAGE_PID)
        pid=${provided_pid:-$service_pid}
        if [ "x$pid" != "x" ] ; then
            kill -9 $pid
        fi
        ;;

    health-off)
        echo "$PACKAGE Sidetracked for maintenance"
        echo "Taking $PACKAGE Out Of Rotation..." | tee -a /var/log/flipkart/ingestor/$MODULENAME.log
            mv /var/lib/$PACKAGE/$STATUSFILE /var/lib/$PACKAGE/old-$STATUSFILE
            echo "Removed status file for OOR" | tee -a /var/log/flipkart/ingestor/$MODULENAME.log
    	;;

    health-on)
        echo "$PACKAGE Resumes its Flight, In Action"
        echo "Getting $PACKAGE Back In Rotation..." | tee -a /var/log/flipkart/ingestor/$MODULENAME.log
        echo "$PACKAGE is up!" > /var/lib/$PACKAGE/dropwizard/$STATUSFILE
        echo "Created status file for BIR" | tee -a /var/log/flipkart/ingestor/$MODULENAME.log
        ;;

    *)
        $1
        echo "USAGE : $PACKAGE start | stop | restart | status"
        ;;
esac
echo "DONE"
